name: Deploy Python App to EC2

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Use the latest stable version

      - name: Set up Python
        uses: actions/setup-python@v3  # Use the latest stable version
        with:
          python-version: '3.x'  # Specify a version (e.g., '3.8' or '3.x')

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | ssh-add -  # Add SSH private key to the SSH agent
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # Connect to EC2 and execute commands
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Exit immediately if any command fails

            # Navigate to the application directory
            cd /home/ubuntu/Python-EC2-GitHub-Actions || { echo "Directory not found! Exiting."; exit 1; }

            # Pull latest changes from the repository
            git pull origin main || { echo "Failed to pull changes from GitHub! Exiting."; exit 1; }

            # Install dependencies
            python3 -m pip install --upgrade pip || { echo "Failed to upgrade pip! Exiting."; exit 1; }
            pip install -r requirements.txt || { echo "Failed to install dependencies! Exiting."; exit 1; }

            # Kill any previous running Flask app
            pkill -f app.py || echo "No existing Flask app to kill."

            # Run Flask app in the background
            nohup python3 app.py & || { echo "Failed to start Flask app! Exiting."; exit 1; }

            echo "Deployment successful!"
          EOF
